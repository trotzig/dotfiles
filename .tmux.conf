# Use C-a as command prefix, but support default prefix key
set -g prefix2 C-a
bind-key a send-prefix -2 # Jump to beginning of line

# Need to explicitly set this so that we don't run the startup files for our
# $SHELL. Without it, files like .zshenv will be loaded twice (once by
# `default-shell` and another for the `default-command`), slowing down startup.
set-option -g default-shell /bin/sh

# tmux starts login shells for new windows by default, but this is unnecessary
# since we have already "logged in" to the system.
# Create a non-login interactive shell by default instead.
# We override SHELL here since setting default-shell causes it to be /bin/sh,
# which is not what we want.
set-option -g default-command "env SHELL=$SHELL $SHELL -i"

# Don't wait for a sequence after reading ESC character, as this can slow down
# processing of arrow keys etc.
set-option -s escape-time 0

# Vim-like keys for copy/pasting
set -gw mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-selection
bind-key -T copy-mode-vi C-v send -X rectangle-toggle

# Vim-like key bindings for pane navigation
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l
bind l select-pane -R

# Window splitting keys that don't require Shift
# Also open the new pane in the same directory as the current pane
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# Open new windows in same directory as current pane
bind c new-window -c '#{pane_current_path}'

bind J command-prompt -p "join pane vertically to ([session:][window.]pane):"  "move-pane -t '%%'"
bind H command-prompt -p "join pane horizontally to ([session:][window.]pane):"  "move-pane -h -t '%%'"
bind S command-prompt -p "swap pane with ([session:][window.]pane):" "swap-pane -s '%%'"

# Pane border colours
set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour240

## Pane numbering colours
set -g display-panes-active-colour colour64
set -g display-panes-colour colour33

## Display message colours
set -g message-style fg=colour233,bg=colour166

# Set status bar
set -g status-style fg=colour240,bg=colour233
set -g status-left '#[fg=white] ⧉ #{session_name} '
set -g status-left-length 32
set -g status-right '#[fg=colour240]#(whoami)#[fg=colour234]@#[fg=colour245]#H '
set -g status-right-length 64
set -g status-justify left

# Window/session selection colours
set -gw mode-style fg=black,bg=colour166

# Pane number display colors
set -g display-panes-active-colour colour33
set -g display-panes-colour colour166

## Clock color
set -gw clock-mode-colour colour166
set -gw clock-mode-style 12

# Scroll and select text in panes using mouse
set -g mouse on

# Window status (tab) colors and format
set -gw window-status-style bold,fg=colour240,bg=colour234
set -gw window-status-format \
  '#[fg=colour16,bg=colour235] #{window_index} #[default] #{window_name} '
set -gw window-status-current-style none,fg=colour231,bg=colour235
set -gw window-status-current-format \
  '#[fg=colour33,bg=colour236] #{window_index} #[default] #{window_name} '

# Automatically name the window based on the program running
# (can be overridden if given a name manually), and prevent programs from
# changing the window title themselves.
set -gw allow-rename off
set -gw automatic-rename on

# Set terminal title
set -g set-titles on
set -g set-titles-string '⧉ #{session_name} [#(whoami)@#h]'

# Misc
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on    # Renumber windows on close so they are sequential
set -g history-limit 100000
set -g bell-action current
set -gw monitor-activity off
set -gw xterm-keys on

# Resize terminal to current active client (rather than smallest client screen)
set -gw aggressive-resize on

# Clipper
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "nc localhost
8377"
